{"remainingRequest":"/usr/src/app/meneki-web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/src/app/meneki-web2/src/views/EditStudyDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/src/app/meneki-web2/src/views/EditStudyDetail.vue","mtime":1599991480667},{"path":"/usr/src/app/meneki-web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/src/app/meneki-web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/src/app/meneki-web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/src/app/meneki-web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EditStudyDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditStudyDetail.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <h2>Study Settings<span>研究内容の編集</span></h2>\r\n        <div class=\"mb-3 mt-5\">\r\n            <h3 class=\"mt-5\">研究内容の詳細画面</h3>\r\n        </div>\r\n        <!-- タイトル -->\r\n        <div class=\"form-group\">\r\n            <label for=\"study-title-form\">タイトル</label>\r\n            <input type=\"text\" id=\"study-title-form\" class=\"form-control\" v-model=\"title\">\r\n        </div>\r\n\r\n\r\n        <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">Upload</span>\r\n            </div>\r\n            <div class=\"custom-file\">\r\n            <input @change=\"onFileChange\" type=\"file\" class=\"custom-file-input\" id=\"study-detail-inputfile\" aria-describedby=\"inputGroupFileAddon01\">\r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\">ファイル選択</label>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"position-relative\" v-if=\"uploadedImage\">\r\n            <img :src=\"uploadedImage\" style=\"width:100%;\"  />\r\n            <mdb-btn  class=\"z-depth-2 position-absolute remove-carousel\" @click=\"removeUploadedImg()\" color=\"danger\">削除</mdb-btn>\r\n        </div>\r\n        <vue-editor v-model=\"Content\" id=\"editor\" useCustomImageHandler @image-added=\"handleImageAdded\"> </vue-editor>\r\n        <div class=\"d-flex flex-row-reverse\">\r\n            <mdb-btn class=\"z-depth-0\" :disabled=\"studyDetailBtnPush\" color=\"success\" @click=\"updateStudy()\">{{ studyDetailBtn }}</mdb-btn>\r\n            <mdb-btn class=\"z-depth-0\"  color=\"secondary\" @click=\"backStudy\">戻る</mdb-btn>\r\n        </div>\r\n\r\n        <!-- お知らせモーダル -->\r\n        <div>\r\n            <mdb-modal :show=\"formModal\" @close=\"formModal = false\">\r\n            <mdb-modal-header>\r\n                <mdb-modal-title>メッセージ</mdb-modal-title>\r\n            </mdb-modal-header>\r\n            <mdb-modal-body style=\"white-space:pre-wrap; word-wrap:break-word;\">{{formModalMessage}}</mdb-modal-body>\r\n            <mdb-modal-footer>\r\n                <mdb-btn class=\"z-depth-0\" color=\"success\" @click.native=\"formModal = false\">OK</mdb-btn>\r\n            </mdb-modal-footer>\r\n            </mdb-modal>\r\n        </div>\r\n        \r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import firebase from 'firebase';\r\n    import {VueEditor} from \"vue2-editor\";\r\n    import { mdbBtn, mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter } from 'mdbvue';\r\n    export default{\r\n        data(){\r\n            return{\r\n                file:\"\",\r\n                title:\"\",\r\n                Content:\"\",\r\n                filePath:\"\",\r\n                uploadedImage:\"\",\r\n                inputImg:\"\",\r\n                formModal:false,\r\n                formModalMessage:\"\",\r\n                studyDetailBtn:\"送信\",\r\n                studyDetailBtnPush:false,\r\n\r\n            }\r\n        },\r\n        components: {\r\n            VueEditor,\r\n            mdbBtn, mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter\r\n        },\r\n        props:{\r\n            studyContents:Object,\r\n        },\r\n        name: 'editStudyDetail',\r\n        methods:{\r\n            backStudy(){\r\n                this.$router.push('/editstudy')\r\n            },\r\n            updateStudy(){\r\n                const files = this.inputImg;\r\n                const key = this.$route.params['id']\r\n                if(this.title.length>1){\r\n\r\n                    if(files.length === 0 && !this.uploadedImage){\r\n                        this.studyDetailBtn=\"送信中…\"\r\n                        this.studyDetailBtnPush=true;\r\n                        firebase.database().ref(`study/${key}`).set({\r\n                        filePath:null,\r\n                        title:this.title,\r\n                        content:this.Content,\r\n                    }).then(()=>{\r\n                            this.studyDetailBtn=\"送信\"\r\n                            this.studyDetailBtnPush=false;\r\n                            this.$router.push('/editstudy')\r\n                        })\r\n\r\n                    }\r\n                    else if (files.length === 0){\r\n                        this.studyDetailBtn=\"送信中…\"\r\n                        this.studyDetailBtnPush=true;\r\n                        firebase.database().ref(`study/${key}`).set({\r\n                            filePath:this.uploadedImage,\r\n                            title:this.title,\r\n                            content:this.Content,\r\n                        }).then(()=>{\r\n                            this.studyDetailBtn=\"送信\"\r\n                            this.studyDetailBtnPush=false;\r\n                            this.$router.push('/editstudy')\r\n                        })\r\n                    }else if(files[0].type != 'image/jpeg' && files[0].type != 'image/gif' && files[0].type != 'image/png' && files[0].type != 'application/pdf'){\r\n                        this.formModalMessage=\"画像を添付してください。\"\r\n                        this.formModal=true;\r\n                    }else if(files[0].size > 3000000){\r\n                        this.formModalMessage=\"画像ファイルファイルが大きすぎます。\\n3MB未満でお願いします。\"\r\n                        this.formModal=true;\r\n\r\n                    }\r\n                    else{\r\n                        this.studyDetailBtn=\"送信中…\"\r\n                        this.studyDetailBtnPush=true;\r\n                        console.log(files)\r\n                        const file = files[0]\r\n                        firebase.storage().ref(`study/${file.name}`).put(file)\r\n                        .then((snapshot)=>{\r\n                            console.log(snapshot)\r\n                            firebase.storage().ref(snapshot.metadata.fullPath).getDownloadURL()\r\n                            .then((url)=>{\r\n                            this.filePath = url\r\n                            console.log(this.filePath)\r\n                            firebase.database().ref(`study/${key}`).set({\r\n                                filePath:this.filePath,\r\n                                title:this.title,\r\n                                content:this.Content}).then(()=>{\r\n                                    this.studyDetailBtn=\"送信\"\r\n                                    this.studyDetailBtnPush=false;\r\n                                    this.$router.push('/editstudy')\r\n                                })\r\n                            })\r\n                        })\r\n                    }\r\n\r\n                }else{\r\n                    this.formModalMessage=\"タイトルは必須項目です。\\n正しい形式で入力してください。\"\r\n                    this.formModal=true;\r\n                }\r\n                \r\n                \r\n\r\n                \r\n            },\r\n            onFileChange(e) {\r\n                console.log('imgUpload')\r\n                let files = e.target.files || e.dataTransfer.files;\r\n                this.inputImg = files\r\n                this.createImage(files[0]);\r\n            },\r\n            // 添付した画像を削除\r\n            removeUploadedImg(){\r\n                this.uploadedImage=\"\";\r\n                this.inputImg=\"\";\r\n                document.getElementById(\"study-detail-inputfile\").value = '';\r\n            },\r\n            // アップロードした画像を表示\r\n            createImage(file) {\r\n                console.log('imgCreated')\r\n                let reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                this.uploadedImage = e.target.result;\r\n            };\r\n            reader.readAsDataURL(file);\r\n            },\r\n                    handleImageAdded: function(file, Editor, cursorLocation, resetUploader) {\r\n        // An example of using FormData\r\n        // NOTE: Your key could be different such as:\r\n        // formData.append('file', file)\r\n        console.log('画像添付')\r\n\r\n        var formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        firebase.storage().ref(file.name).put(file)\r\n        .then((snapshot)=>{\r\n            console.log(snapshot)\r\n            firebase.storage().ref(file.name).getDownloadURL()\r\n            .then((url)=>{\r\n                Editor.insertEmbed(cursorLocation, 'image', url)\r\n                resetUploader()\r\n            })\r\n        })\r\n        .catch((err) => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(err)\r\n        })\r\n    }\r\n        },\r\n      watch:{\r\n        studyContents:function () {\r\n          console.log('someObj changed')\r\n          this.Content = this.studyContent\r\n          this.title=this.studyContents[this.$route.params['id']].title\r\n          this.Content=this.studyContents[this.$route.params['id']].content\r\n          this.uploadedImage=this.studyContents[this.$route.params['id']].filePath\r\n        }\r\n        },\r\n        created(){\r\n            this.title=this.studyContents[this.$route.params['id']].title\r\n            this.Content=this.studyContents[this.$route.params['id']].content\r\n            this.uploadedImage=this.studyContents[this.$route.params['id']].filePath\r\n        }\r\n    }\r\n</script>\r\n\r\n"]}]}